name: "Test on PR Comments"

on:
  issue_comment:
    types:
      - created

env:
  PR_NUMBER: ${{ github.event.issue.number }}

jobs:
  deploy:
    if: ${{  github.event.issue.pull_request && (startsWith(github.event.comment.body, '$deploy') && contains(github.event.comment.body, 'dev')) }}
    name: Deploy
    environment:
      name: development
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash

    steps:
      - name: View context attributes
        uses: actions/github-script@v4
        with:
          script: console.log(context)

      - uses: actions/github-script@v4
        id: get-pr
        with:
          script: |
            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            }
            core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
            try {
              const result = await github.pulls.get(request)
              return result.data
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }

      - uses: actions/checkout@v2
        with:
          repository: ${{ fromJSON(steps.get-pr.outputs.result).head.repo.full_name }}
          ref: ${{ fromJSON(steps.get-pr.outputs.result).head.sha }} # or .head.ref for branch name

      - name: Add/Update PR
        uses: actions/github-script@v4
        with:
          script: |
            const {owner, repo} = context.issue

            const output = `${{ github.event.comment.body }}

            #### PR Deployment Complete ðŸš€
            DateTime: $(date)
            URL: \`APP URL GOES HERE\`

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.updateComment({
              owner,
              repo,
              comment_id: context.payload.comment.id,
              body: output
            })


            github.reactions.createForIssueComment({
              owner,
              repo,
              comment_id: context.payload.comment.id,
              content: "rocket",
            });
